apply plugin: "io.gitlab.arturbosch.detekt"
detekt {
    // Builds the AST in parallel. Rules are always executed in parallel.
    // Can lead to speedups in larger projects. `false` by default.
    parallel = false

    // Define the detekt configuration(s) you want to use.
    // Defaults to the default detekt configuration.
    config = files("$rootProject.rootDir/config/quality/detekt/config.yml")

    // Applies the config files on top of detekt's default config file. `false` by default.
    buildUponDefaultConfig = true

    // Turns on all the rules. `false` by default.
    allRules = false

    // Specifying a baseline file. All findings stored in this file in subsequent runs of detekt.
    //baseline = file("path/to/baseline.xml")

    // Disables all default detekt rulesets and will only run detekt with custom rules
    // defined in plugins passed in with `detektPlugins` configuration. `false` by default.
    disableDefaultRuleSets = false

    // Adds debug output during task execution. `false` by default.
    debug = false

    // If set to `true` the build does not fail when the
    // maxIssues count was reached. Defaults to `false`.
    ignoreFailures = project.ext.ignoreFailures

    // Android: Don't create tasks for the specified build types (e.g. "release")
    ignoredBuildTypes = ["release", "demo", "pilot"]

    // Android: Don't create tasks for the specified build flavor (e.g. "production")
    //ignoredFlavors = ["production"]

    // Android: Don't create tasks for the specified build variants (e.g. "productionRelease")
    //ignoredVariants = ["productionRelease"]

    // Specify the base path for file paths in the formatted reports.
    // If not set, all file paths reported will be absolute file path.
    basePath = projectDir

    reports {
        xml {
            enabled = project.ext.reportXml
            destination = file("build/reports/detekt.xml")
        }
        html {
            enabled = project.ext.reportHtml
            destination = file("build/reports/detekt.html")
        }
        txt {
            enabled = false
        }
    }
}
tasks.detekt.jvmTarget = rootProject.ext.javaJvmTarget.toString()
dependencies{
    detektPlugins("io.gitlab.arturbosch.detekt:detekt-formatting:$rootProject.ext.detektVersion")
}
